/*
    날짜 : 2025/07/23
    이름 : 이준우
    내용 : SQL_ 연습문제    

*/

-- 실습 1
alter session set "_oracle_script"=true;
create user library identified by 1234;
grant connect, resource, unlimited tablespace to library;

-- 실습 2
DROP TABLE MEMBER
create table member(
    member_id   number(4) primary key,
    name        varchar2(40) not null,
    address     varchar2(100),
    hp          char(13),
    join_date   date not null
);    

DROP TABLE BOOK
create table book(
    book_id     number(5) primary key,
    title       varchar2(50) not null,
    author      varchar2(40) not null,
    publisher   varchar2(40) not null,
    available   char(1),
    reg_date    date not null
);

DROP TABLE LOAN
create table loan(
    loan_id     number generated by default as identity primary key,
    member_id   number(4) not null,
    book_id     number(5) not null,
    loan_date   date default null,
    return_date date default null,
    actual_date date default null,
    CONSTRAINT fk_loan_member FOREIGN KEY (member_id) REFERENCES member (member_id),
    CONSTRAINT fk_loan_book   FOREIGN KEY (book_id) REFERENCES book (book_id)
);

-- 실습 3
insert into member values(1001, '김유신', '서울특별시 강남구 역삼동', '010-1234-1001', '2024-01-10 09:15:00');
insert into member values(1002, '김춘추', '대전광역시 유성구 장대동', '010-1234-1002', '2024-02-14 14:30:45');
insert into member values(1003, '장보고', '대구광역시 수성구 반월동', '010-1234-1005', '2024-03-01 11:05:20');
insert into member values(1004, '강감찬', '부산광역시 금정구 부곡동', '010-1234-1004', '2024-03-22 16:40:00');
insert into member values(1005, '이순신', '광주광역시 광산구 우산동', '010-1234-1005', '2024-04-10 08:50:10');

insert into book values(10001, '태백산맥', '조정래', '문학수첩', 'Y', '2014-01-10 09:15:00');
insert into book values(10002, '데미안', '헤르만 헤세', '민음사', 'N', '2014-02-14 14:30:45');
insert into book values(10003, '토지', '박경리', '문학사상사', 'Y', '2014-03-01 11:05:20');
insert into book values(10004, '명품 자바 프로그래밍', '제임스 고슬링', '한빛출판사', 'Y', '2014-03-22 16:40:00');
insert into book values(10005, '로미오와 줄리엣', '세익스피어', '열린책들', 'N', '2014-04-10 08:50:10');
insert into book values(10006, '삼국지','나관중', '민음사', 'Y', '2014-04-05 09:12:02');
insert into book values(10007, '칼의 노래', '김훈', '문학동네', 'Y', '2014-06-10 12:53:17');
insert into book values(10008, '데이터베이스', '래리 엘리슨', '한빛출판사', 'N', '2014-05-23 10:13:09');
insert into book values(10009, 'Linux 운영체제', '리누스 토발즈', '한빛출판사', 'Y', '2014-03-11 11:23:43');
insert into book values(10010, '어린왕자', '생텍쥐베리', '열린책들', 'Y', '2014-05-13 15:27:21');

INSERT INTO Loan (loan_id, member_id, book_id, loan_date, return_date, actual_date) VALUES (1, 1001, 10002, TO_DATE('2024-03-01 10:02:31', 'YYYY-MM-DD HH24:MI:SS'), TO_DATE('2024-03-15 10:02:31', 'YYYY-MM-DD HH24:MI:SS'), TO_DATE('2024-03-13 09:44:19', 'YYYY-MM-DD HH24:MI:SS'));
INSERT INTO Loan (loan_id, member_id, book_id, loan_date, return_date, actual_date) VALUES (2, 1002, 10004, TO_DATE('2024-03-05 15:10:02', 'YYYY-MM-DD HH24:MI:SS'), TO_DATE('2024-03-19 15:10:02', 'YYYY-MM-DD HH24:MI:SS'), TO_DATE('2024-03-12 17:12:30', 'YYYY-MM-DD HH24:MI:SS'));
INSERT INTO Loan (loan_id, member_id, book_id, loan_date, return_date, actual_date) VALUES (3, 1003, 10008, TO_DATE('2024-04-01 11:01:12', 'YYYY-MM-DD HH24:MI:SS'), TO_DATE('2024-04-15 11:01:12', 'YYYY-MM-DD HH24:MI:SS'), NULL);
INSERT INTO Loan (loan_id, member_id, book_id, loan_date, return_date, actual_date) VALUES (4, 1002, 10001, TO_DATE('2024-04-10 14:32:01', 'YYYY-MM-DD HH24:MI:SS'), TO_DATE('2024-04-24 14:32:01', 'YYYY-MM-DD HH24:MI:SS'), TO_DATE('2024-04-22 13:56:32', 'YYYY-MM-DD HH24:MI:SS'));
INSERT INTO Loan (loan_id, member_id, book_id, loan_date, return_date, actual_date) VALUES (5, 1005, 10004, TO_DATE('2024-04-15 16:24:21', 'YYYY-MM-DD HH24:MI:SS'), TO_DATE('2024-04-29 16:24:21', 'YYYY-MM-DD HH24:MI:SS'), NULL);
INSERT INTO Loan (loan_id, member_id, book_id, loan_date, return_date, actual_date) VALUES (6, 1004, 10006, TO_DATE('2024-05-01 09:12:09', 'YYYY-MM-DD HH24:MI:SS'), TO_DATE('2024-05-15 09:12:09', 'YYYY-MM-DD HH24:MI:SS'), TO_DATE('2024-05-14 09:21:27', 'YYYY-MM-DD HH24:MI:SS'));
INSERT INTO Loan (loan_id, member_id, book_id, loan_date, return_date, actual_date) VALUES (7, 1001, 10007, TO_DATE('2024-05-03 13:51:07', 'YYYY-MM-DD HH24:MI:SS'), TO_DATE('2024-05-17 13:51:07', 'YYYY-MM-DD HH24:MI:SS'), TO_DATE('2024-05-16 14:05:10', 'YYYY-MM-DD HH24:MI:SS'));
INSERT INTO Loan (loan_id, member_id, book_id, loan_date, return_date, actual_date) VALUES (8, 1003, 10009, TO_DATE('2024-06-01 11:15:43', 'YYYY-MM-DD HH24:MI:SS'), TO_DATE('2024-06-15 11:15:43', 'YYYY-MM-DD HH24:MI:SS'), NULL);
INSERT INTO Loan (loan_id, member_id, book_id, loan_date, return_date, actual_date) VALUES (9, 1004, 10004, TO_DATE('2024-06-02 12:30:52', 'YYYY-MM-DD HH24:MI:SS'), TO_DATE('2024-06-16 12:30:52', 'YYYY-MM-DD HH24:MI:SS'), NULL);
INSERT INTO Loan (loan_id, member_id, book_id, loan_date, return_date, actual_date) VALUES (10, 1002, 10008, TO_DATE('2024-06-05 10:06:17', 'YYYY-MM-DD HH24:MI:SS'), TO_DATE('2024-06-19 10:06:17', 'YYYY-MM-DD HH24:MI:SS'), NULL);

-- 실습 4
SELECT * FROM MEMBER;

-- 실습 5
SELECT TITLE, AUTHOR FROM BOOK;

-- 실습 6
SELECT NAME, ADDRESS FROM MEMBER WHERE ADDRESS LIKE '부산%';

-- 실습 7
SELECT TITLE FROM BOOK WHERE AVAILABLE = 'Y';

-- 실습 8
SELECT * FROM BOOK WHERE BOOK_ID = 10005;

-- 실습 9
SELECT * FROM MEMBER WHERE MEMBER_ID = 1002;

-- 실습 10
SELECT TITLE FROM BOOK WHERE REG_DATE BETWEEN '2014-03-01' AND '2014-03-31';
SELECT TITLE FROM BOOK WHERE SUBSTR(REG_DATE, 1, 7) = '2014-03';
//SELECT TITLE FROM BOOK WHERE BETWEEN '2014-03-01' AND '2014-03-31;

-- 실습 11
SELECT TITLE, AUTHOR, PUBLISHER FROM BOOK WHERE PUBLISHER = '민음사';

-- 실습 12
SELECT LOAN_ID, MEMBER_ID, BOOK_ID FROM LOAN WHERE ACTUAL_DATE IS NULL;

-- 실습 13
SELECT * FROM MEMBER WHERE NAME LIKE '김%';

-- 실습 14
SELECT NAME, ADDRESS FROM MEMBER WHERE ADDRESS LIKE '대구%' OR ADDRESS LIKE '부산%';
SELECT NAME, ADDRESS FROM MEMBER WHERE SUBSTR(ADDRESS, 1, 2) IN ('대구', '부산');

-- 실습 15 **
SELECT BOOK_ID, TITLE FROM BOOK WHERE BOOK_ID = 10003 OR BOOK_ID = 10006;
SELECT BOOK_ID, TITLE FROM BOOK WHERE BOOK_ID IN (10003, 10006);

-- 실습 16
SELECT TITLE, AUTHOR FROM BOOK WHERE AUTHOR = '조정래' OR AUTHOR = '박경리';
SELECT TITLE, AUTHOR FROM BOOK WHERE AUTHOR IN('조정래', '박경리');

-- 실습 17
SELECT NAME, JOIN_DATE FROM MEMBER WHERE JOIN_DATE < '2024-04-01';

-- 실습 18
SELECT LOAN_ID, MEMBER_ID, BOOK_ID, LOAN_DATE
FROM LOAN
WHERE LOAN_DATE >= TO_DATE('2024-05-01', 'YYYY-MM-DD');

SELECT LOAN_ID, MEMBER_ID, BOOK_ID, LOAN_DATE
FROM LOAN WHERE LOAN_DATE > '2024-05-01';

-- 실습 19
SELECT TITLE, AUTHOR, PUBLISHER FROM BOOK WHERE AVAILABLE = 'N';

-- 실습 20
SELECT * FROM BOOK WHERE TITLE LIKE '%자바%';
// SELECT TITLE, AUTHOR, PUBLISHER FROM BOOK WHERE TITLE LIKE 'N';

-- 실습 21
SELECT * FROM MEMBER WHERE HP <> '010-1234-1003'; //?
SELECT NAME, HP FROM MEMBER WHERE HP != '010-1234-1003';

-- 실습 22
SELECT LOAN_ID, MEMBER_ID, BOOK_ID FROM LOAN WHERE RETURN_DATE < '2024-03-20';

-- 실습 23 **
SELECT * FROM MEMBER ORDER BY NAME;

-- 실습 24
SELECT TITLE, REG_DATE FROM BOOK ORDER BY REG_DATE DESC;

-- 실습 25
SELECT TITLE FROM BOOK ORDER BY TITLE ASC FETCH FIRST 3 ROWS ONLY;

-- 실습 26
SELECT * FROM MEMBER ORDER BY JOIN_DATE DESC FETCH FIRST 1 ROWS ONLY;

-- 실습 27
SELECT LOAN_ID, LOAN_DATE FROM LOAN ORDER BY LOAN_DATE ASC FETCH FIRST 2 ROWS ONLY;

-- 실습 28
SELECT COUNT(*) FROM MEMBER;

-- 실습 29
SELECT COUNT(*) FROM BOOK;

-- 실습 30 **
SELECT COUNT(*) FROM BOOK WHERE AVAILABLE = 'Y';

-- 실습 31
SELECT PUBLISHER, COUNT(*) AS 출판_도서수 FROM BOOK GROUP BY PUBLISHER;

-- 실습 32
SELECT COUNT(*) FROM LOAN WHERE SUBSTR(LOAN_DATE, 1, 4) = '2024';

-- 실습 33
SELECT MEMBER_ID, COUNT(*) AS 대출_도서수 FROM LOAN GROUP BY MEMBER_ID;

-- 실습 34
SELECT BOOK_ID, COUNT(*) AS 대출횟수 FROM LOAN GROUP BY BOOK_ID;

-- 실습 35
SELECT MEMBER_ID, COUNT(*) AS 회원_대출건수
FROM LOAN
GROUP BY MEMBER_ID
HAVING COUNT(*) >= 2;

-- 실습 36
SELECT BOOK_ID, COUNT(*) AS 도서_대출건수
FROM LOAN
GROUP BY BOOK_ID
HAVING COUNT(*) >= 2;

-- 실습 37
SELECT
    L.MEMBER_ID,
    M.NAME,
    L.BOOK_ID,
    B.TITLE,
    LOAN_DATE
FROM LOAN L
JOIN MEMBER M ON L.MEMBER_ID = M.MEMBER_ID
JOIN BOOK B ON L.BOOK_ID = B.BOOK_ID;

-- 실습 38 **
SELECT
    M.NAME,
    COUNT(*)
FROM LOAN L
JOIN MEMBER M ON L.MEMBER_ID = M.MEMBER_ID
GROUP BY L.MEMBER_ID, M.NAME
HAVING COUNT(*) >= 3;

-- 실습 39 **
SELECT
    LOAN_ID,
    NAME,
    TITLE,
    LOAN_DATE
FROM LOAN L
JOIN MEMBER M ON L.MEMBER_ID = M.MEMBER_ID
JOIN BOOK B ON L.BOOK_ID = B.BOOK_ID
WHERE LOAN_DATE < '2024-05-01';


-- 실습 40 **
SELECT
   TITLE
FROM LOAN L
JOIN MEMBER M ON L.MEMBER_ID = M.MEMBER_ID
JOIN BOOK B ON L.BOOK_ID = B.BOOK_ID
WHERE NAME = '김유신';

-- 실습 41**
SELECT 
    NAME
FROM LOAN L
JOIN MEMBER M ON L.MEMBER_ID = M.MEMBER_ID
JOIN BOOK B ON L.BOOK_ID = B.BOOK_ID
WHERE TITLE = '태백산맥';

-- 실습 42**
SELECT 
    TITLE
FROM LOAN L
JOIN MEMBER M ON L.MEMBER_ID = M.MEMBER_ID
JOIN BOOK B ON L.BOOK_ID = B.BOOK_ID
WHERE NAME = '김춘추'
ORDER BY TITLE;

-- 실습 43
SELECT
    TITLE, NAME
FROM LOAN L
JOIN MEMBER M ON L.MEMBER_ID = M.MEMBER_ID
JOIN BOOK B ON L.BOOK_ID = B.BOOK_ID
WHERE LOAN_DATE LIKE '2024-04%';

-- 실습 44
SELECT
    NAME,
    TITLE
FROM LOAN L
JOIN MEMBER M ON L.MEMBER_ID = M.MEMBER_ID
JOIN BOOK B ON L.BOOK_ID = B.BOOK_ID
WHERE ACTUAL_DATE IS NULL;

-- 실습 45
SELECT
    NAME, TITLE
FROM LOAN L
JOIN MEMBER M ON L.MEMBER_ID = M.MEMBER_ID
JOIN BOOK B ON L.BOOK_ID = B.BOOK_ID
WHERE AUTHOR = '조정래';

-- 실습 46 **
SELECT
    B.BOOK_ID,
    TITLE
FROM BOOK B
LEFT JOIN LOAN L ON L.BOOK_ID = B.BOOK_ID
WHERE LOAN_ID IS NULL;

-- 실습 47 
SELECT
    M.NAME,
    COUNT(*) 총_건수
FROM LOAN L
JOIN MEMBER M ON L.MEMBER_ID = M.MEMBER_ID
GROUP BY L.MEMBER_ID, M.NAME
ORDER BY 총_건수 DESC;

-- 실습 48
SELECT NAME FROM MEMBER WHERE MEMBER_ID=(
    SELECT
     MEMBER_ID
     FROM LOAN
     GROUP BY MEMBER_ID
     ORDER BY COUNT(*) DESC
     FETCH FIRST 1 ROWS ONLY    
);

-- 실습 49
SELECT * FROM BOOK WHERE PUBLISHER = (
    SELECT PUBLISHER FROM BOOK WHERE TITLE = '데이터베이스'
) AND TITLE<> '데이터베이스';

-- 실습 50 **
SELECT NAME FROM MEMBER WHERE MEMBER_ID IN(
    SELECT MEMBER_ID FROM LOAN WHERE BOOK_ID = 10004
);


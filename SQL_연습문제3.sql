/*
    날짜 : 2025-07-22
    이름 : 이준우
    내용 : SQL_연습문제3

*/

-- 실습 3-1
Alter session set "_ORACLE_SCRIPT"=true;
create user bank identified by 1234;
grant connect, resource, unlimited tablespace to bank;

-- 실습 3-2
DROP TABLE CUSTOMER;
create table CUSTOMER (
    C_ID    VARCHAR2(14) PRIMARY KEY,
    C_NAME  VARCHAR2(20) NOT NULL,
    C_TYPE  NUMBER(1)   NOT NULL,
    C_HP    VARCHAR2(14) UNIQUE NOT NULL,
    C_ADDR  VARCHAR2(100)
);

DROP TABLE ACCOUNT;
create table ACCOUNT (
    ACC_NO CHAR(11) PRIMARY KEY,
    ACC_TYPE CHAR(2) NOT NULL,
    ACC_NAME VARCHAR2(20) NOT NULL,
    ACC_CID VARCHAR2(14) NOT NULL,
    ACC_BALANCE NUMBER DEFAULT 0,
    ACC_DATE DATE NOT NULL,
    FOREIGN KEY (ACC_CID) REFERENCES CUSTOMER (C_ID)
);

DROP TABLE TRANSACTION;
create table TRANSACTION (
    TR_NO NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    TR_ACC CHAR(11) NOT NULL,
    TR_TYPE NUMBER(1) NOT NULL,
    TR_AMOUNT NUMBER DEFAULT 0,
    TR_DATE DATE NOT NULL,
    FOREIGN KEY (TR_ACC) REFERENCES ACCOUNT (ACC_NO)
);

-- 실습 3-3
INSERT INTO customer VALUES ('730423-1000001', '김유신',     1, '010-1234-1001', '경기도 수원시');
INSERT INTO customer VALUES ('750210-1000002', '김춘추',     1, '010-1234-1002', '경기도 광주시');
INSERT INTO customer VALUES ('830513-2000003', '선덕여왕',   1, '010-1234-1003', '서울시 마포구');
INSERT INTO customer VALUES ('870830-1000004', '강감찬',     1, '010-1234-1004', '서울시 영등포구');
INSERT INTO customer VALUES ('910912-2000005', '신사임당',   1, '010-1234-1005', '강원도 강릉시');
INSERT INTO customer VALUES ('941127-1000006', '이순신',     1, '010-1234-1006', '부산시 영도구');
INSERT INTO customer VALUES ('220-82-52237', '(주)한국전산', 2, '02-134-1045',   '서울시 강서구');
INSERT INTO customer VALUES ('361-22-42687', '(주)정보산업', 2, '031-563-1253',  '경기도 광명시');
INSERT INTO customer VALUES ('103-22-51094', '부산의원',     2, '051-518-1010',  '부산시 남구');

INSERT INTO account VALUES ('101-11-1001', 'S1', '자유저축예금', '730423-1000001',  420000, '2005-07-21 12:10:03');
INSERT INTO account VALUES ('101-12-1002', 'S2', '정기적립예금', '830513-2000003', 1020000, '2011-05-13 13:20:12');
INSERT INTO account VALUES ('101-11-1003', 'S1', '자유저축예금', '870830-1000004',  53000, '2007-02-17 21:54:06');
INSERT INTO account VALUES ('101-21-1004', 'L1', '고객신용대출', '910912-2000005', 1200500, '2009-08-25 14:34:57');
INSERT INTO account VALUES ('101-13-1005', 'S3', '주택청약예금', '941127-1000006', 720800, '2012-10-15 19:56:34');
INSERT INTO account VALUES ('101-22-1006', 'L2', '예금담보대출', '730423-1000001', 25000, '2013-12-11 18:14:22');
INSERT INTO account VALUES ('101-23-1007', 'L2', '주택담보대출', '750210-1000002', 2700000, '2020-09-23 09:19:13');
INSERT INTO account VALUES ('101-11-2001', 'S1', '자유저축예금', '220-82-52237', 23000000, '2003-04-14 11:02:43');
INSERT INTO account VALUES ('101-11-2002', 'S1', '자유저축예금', '361-22-42687',  4201000, '2008-12-30 12:32:59');
INSERT INTO account VALUES ('101-11-2003', 'S1', '자유저축예금', '103-22-51094', 8325010, '2010-06-07 15:47:04');

INSERT INTO transaction (tr_acc, tr_type, tr_amount, tr_date) VALUES ('101-11-1001', 1, 50000, '2025-07-12 13:55:31');
INSERT INTO transaction (tr_acc, tr_type, tr_amount, tr_date) VALUES ('101-11-1003', 1, 120000, '2025-07-12 14:15:22');
INSERT INTO transaction (tr_acc, tr_type, tr_amount, tr_date) VALUES ('101-11-2001', 2, 300000, '2025-07-19 17:53:42');
INSERT INTO transaction (tr_acc, tr_type, tr_amount, tr_date) VALUES ('101-12-1002', 1, 1000000, '2025-07-20 07:25:08');
INSERT INTO transaction (tr_acc, tr_type, tr_amount, tr_date) VALUES ('101-11-1001', 0, 0, '2025-07-20 09:21:13');
INSERT INTO transaction (tr_acc, tr_type, tr_amount, tr_date) VALUES ('101-13-1005', 1, 200000, '2025-07-20 10:15:02');
INSERT INTO transaction (tr_acc, tr_type, tr_amount, tr_date) VALUES ('101-11-1001', 1, 450000, '2025-07-20 11:34:42');
INSERT INTO transaction (tr_acc, tr_type, tr_amount, tr_date) VALUES ('101-11-2002', 2, 32000, '2025-07-21 09:12:37');
INSERT INTO transaction (tr_acc, tr_type, tr_amount, tr_date) VALUES ('101-11-2003', 0, 0, '2025-07-21 16:02:31');
INSERT INTO transaction (tr_acc, tr_type, tr_amount, tr_date) VALUES ('101-11-1003', 2, 75000, '2025-07-21 17:41:11');

-- 실습 3-4
select * from account;

-- 실습 3-5
select * from customer;

-- 실습 3-6
select * from transaction where tr_type <>0;
select * from transaction where tr_type != 0;
select * from transaction where tr_type in (1,2);
// 

-- 실습 3-7
select c_name, c_id from customer;

-- 실습 3-8
select acc_type, acc_name from account;

-- 실습 3-9
select distinct acc_type, acc_name from account;

-- 실습 3-10
select * from account where acc_name = '자유저축예금' and acc_balance >= 1000000; 
select * from account where acc_type = 's1' and acc_balance >= 1000000; //?

-- 실습 3-11
select * from customer where c_addr like '경기도%';

-- 실습 3-12
select * from customer where c_type = 2;

-- 실습 3-13
select * from transaction where tr_type = 1;

-- 실습 3-14
select * from transaction
    where tr_type = '2'
    order by tr_amount desc;

-- 실습 3-15
select sum(tr_amount) as 입금총합, avg(tr_amount) as 입금평균
    from transaction where tr_type=1;

-- 실습 3-16
select max(tr_amount) as "큰 금액", min(tr_amount) as "작은 금액"
    from transaction where tr_type=2;
    // max가 최대값, min은 최솟값

-- 실습 3-17 
select * from account
    where acc_type = 'S1' and acc_balance >= 1000000
    order by acc_balance desc;

-- 실습 3-18
select * from account where acc_type = 'S1'
    order by acc_balance desc
    fetch first 1 rows only;
    
select * from account
    where acc_balance = (select max(acc_balance)
from account where acc_type = 'S1');

    
-- 실습 3-19
select * from transaction where tr_type in (1, 2)
    order by tr_type, tr_amount desc;

-- 실습 3-20
select
    count(case when tr_type = 0 then 1 end) as "조회 건수",
    count(case when tr_type = 1 then 1 end) as "입금 건수",
    count(case when tr_type = 2 then 1 end) as "출금 건수"
from transaction;

-- 실습 3-21
select
    tr_type,
    case
        when (tr_type = 0) then '조회'
        when (tr_type = 1) then '조회'
        when (tr_type = 2) then '조회'
    end as "거래 종류",
    tr_acc,
    tr_amount
from transaction;

-- 실습 3-22
select tr_type, count(tr_no) from transaction
    group by tr_type
    order by tr_type asc;

-- 실습 3-23
select
    tr_acc,
    tr_type,
    sum(tr_amount) as 합계
from transaction
    where    tr_type = 1
    group by tr_acc, tr_type
    having   sum(tr_amount) >= 100000
    order by 합계 desc;

-- 실습 3-24
select 
    tr_acc,
    count(*) as 거래건수,
    sum(tr_amount) as 총거래금액
from transaction
    where    tr_type in (1, 2)
    group by tr_acc
    having   sum(tr_amount) >= 100000
    order by 총거래금액 desc
    offset 1 rows fetch next 2 rows only;

-- 실습 3-25**
select 
    acc_no, acc_name, c_id, c_name,
    acc_balance, acc_date
from account a
    join customer c
    on a.acc_cid = c.c_id;
// 

-- 실습 3-26
select 
    acc_no as 계좌번호, 
    acc_name as 계좌이름,
    c_id as "주민번호(사업자번호)",
    c_name as 고객명,
    acc_balance as 현재잔액
from account a
    join customer c
    on a.acc_cid = c.c_id
    where acc_balance >= 1000000
    order by acc_balance desc;

-- 실습 3-27
select 
    ??,
    ??,
    ??,
    ??,
    ??,
    ??
from ??
    join ?? on ??

-- 실습 3-28
select
    a.acc_no,
    c.C_name,
    sum(case when.tr_type = 1 then t.tr_amount else 0 end) as 총입금액,
    sum(case when.tr_type = 2 then t.tr_amount else 0 end) as 총입금액
from transaction t
    ?? join account a on t.tr_acc = a.acc_no
    join customer c on a.acc_cid = c.c_id
    where c.c_type = 1
    group by a.acc_no, c.c_name;

-- 실습 3-29
select
    a.acc_no,
    a.acc_cid
    a.acc_name,
    c.c_name
    a.acc_balance +
        sum(case when t.tr_type = 001 then t.tr_amount else 0 end) -
        sum(case when t.tr_type = 002 then t.tr_amount else 0 end) as 최종잔액
from
    account a
    left join transaction t on a.acc_no = t.tr_acc
    join customer c on a.acc_cid = c.c_id
    where c_type = 1
    group by a.acc_no, a.acc_cid, a.acc_name, a.acc_balance, c.c_name
    order by a.acc_no;

-- 실습 3-30
select c.c_name, a.acc_no, t.total_deposit, c.c_addr
from account a
    join coutomer c on a.acc_cid = c.c_id
    join(
    select tr_acc, sum(tr_amount) as total_deposit
from transaction
    where tr_type = 1
    group by tr_acc)
    t on a.acc_no = t.tr_acc
    where
    t.total_deposit = (
    select
    max(sum_amount)
from(
    select tr_acc, sum(tr_amount) as sum_amount
    from transaction
    where tr_type = 1
    group by tr_acc)
);










